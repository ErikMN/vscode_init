#!/usr/bin/env bash
set -eu

DEBUG=false

if [ $# -eq 0 ]; then
  echo "Usage: $(basename $0) <project-name>"
  exit 0
else
  APP=$1
fi

# Default template:
PROJECT_DESCRIPTION=C
TEMPLATE_DIR=c_src
TEMPLATE=

# Set template from env:
if [ "$TEMPLATE" = cpp ]; then
  PROJECT_DESCRIPTION=C++
  TEMPLATE_DIR=cpp_src
elif [ "$TEMPLATE" = sharedlib ]; then
  PROJECT_DESCRIPTION="shared library C"
  TEMPLATE_DIR=c_shared_lib
fi

VSCODE="command -v code >/dev/null 2>&1"
GIT="command -v git >/dev/null 2>&1"
OS=$(uname)

realpath_macos() {
  [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

if [ "$OS" = "Darwin" ]; then
  PROJECT_DIR=$(realpath_macos "$APP")
else
  PROJECT_DIR=$(realpath "$APP")
fi

APP=$(basename "${APP}")
BASEDIR=$(dirname "$0")
VSCODE_INIT_DIR="$BASEDIR/../share/vscode_init"

if [ "$DEBUG" = true ]; then
  printf "APP:                %s\n" "$APP"
  printf "PROJECT_DIR:        %s\n" "$PROJECT_DIR"
  printf "BASEDIR:            %s\n" "$BASEDIR"
  printf "VSCODE_INIT_DIR:    %s\n" "$VSCODE_INIT_DIR"
  printf "\n"
fi

if [ -d "$PROJECT_DIR" ]; then
  echo "*** Error: '$PROJECT_DIR' already exists... exit"
  exit 1
fi

SUPPORTED="2.28.0"
GIT_VERSION=$(git --version | cut -d' ' -f3)

# Silence git:
q_git() {
  git "$@" >/dev/null
}

# Initialize a git repo with an initial commit (git < 2.28.0 does not support 'git init -b <name>'):
GIT_INIT_REPO() {
  if ! $GIT > /dev/null; then
    echo "*** Git is not installed: skipping setup repo"
    return
  fi
  if (( $(echo $GIT_VERSION $SUPPORTED | awk '{print ($1 >= $2)}') )); then
    q_git init -b main
  else
    q_git init && q_git checkout -b main
  fi
  q_git add -A && q_git commit -m "Initial commit"
}

# Create a C project with vscode tasks in the provided directory:
SETUP_PROJECT() {
  echo "*** Initializing $PROJECT_DESCRIPTION project '$APP' in this folder"
  mkdir -p "$PROJECT_DIR" &&
  cp -r "$VSCODE_INIT_DIR/$TEMPLATE_DIR/." "$PROJECT_DIR/" &&
  mkdir -p "$PROJECT_DIR/.vscode" &&
  cp "$VSCODE_INIT_DIR/vscode/"*.json "$PROJECT_DIR/.vscode/" &&
  sed -i.bak "s/xxxxxxxxx/$APP/g" "$PROJECT_DIR/Makefile" "$PROJECT_DIR/.gitignore" &&
  cd "$PROJECT_DIR/" &&
  rm *.bak .*.bak &&
  GIT_INIT_REPO
}

# Start Visual Studio Code if it is installed:
START_VSCODE() {
  if $VSCODE > /dev/null; then
    echo "*** Starting Visual Studio Code"
    code "$PROJECT_DIR"
  else
    echo "*** Visual Studio Code is not installed"
  fi
}

# Execute setup functions:
SETUP_PROJECT
START_VSCODE
echo "*** Project created in:" "$PROJECT_DIR"
